package j2d.color;

import com.alee.extended.panel.AlignPanel;
import com.intellij.uiDesigner.core.GridConstraints;
import com.intellij.uiDesigner.core.GridLayoutManager;
import com.intellij.uiDesigner.core.Spacer;
import j2d.Utils;

import javax.imageio.ImageIO;
import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.geom.Ellipse2D;
import java.awt.image.BufferedImage;
import java.io.IOException;
import java.net.URL;

public class AlphaController {
    private JPanel panel1;
    private JRadioButton clearRadioButton;
    private JRadioButton srcOverRadioButton;
    private JRadioButton dstOverRadioButton;
    private JRadioButton srcInRadioButton;
    private JRadioButton dstInRadioButton;
    private JRadioButton srcOutRadioButton;
    private JRadioButton dstOutRadioButton;
    private JRadioButton srcRadioButton;
    private JRadioButton dstRadioButton;
    private JRadioButton srcAtopRadioButton;
    private JRadioButton dstAtopRadioButton;
    private JRadioButton xorRadioButton;
    private JPanel compositePanel;

    public int getAlphaMode() {
        return alphaMode;
    }

    public void setAlphaMode(int alphaMode) {
        this.alphaMode = alphaMode;
        compositePanel.repaint();
    }

    private int alphaMode = AlphaComposite.CLEAR;

    public static void main(String[] args) {
        Utils.runFrame(() -> {
            return new AlphaController().$$$getRootComponent$$$();
        });
    }

    public AlphaController() {
        $$$setupUI$$$();
        compositePanel.setPreferredSize(new Dimension(500, 500));
        clearRadioButton.addActionListener(actionEvent -> setAlphaMode(AlphaComposite.CLEAR));
        srcOverRadioButton.addActionListener(actionEvent -> setAlphaMode(AlphaComposite.SRC_OVER));
        dstOverRadioButton.addActionListener(actionEvent -> setAlphaMode(AlphaComposite.DST_OVER));
        srcInRadioButton.addActionListener(actionEvent -> setAlphaMode(AlphaComposite.SRC_IN));
        dstInRadioButton.addActionListener(actionEvent -> setAlphaMode(AlphaComposite.DST_IN));
        srcOutRadioButton.addActionListener(actionEvent -> setAlphaMode(AlphaComposite.SRC_OUT));
        dstOutRadioButton.addActionListener(actionEvent -> setAlphaMode(AlphaComposite.DST_OUT));
        srcRadioButton.addActionListener(actionEvent -> setAlphaMode(AlphaComposite.SRC));
        dstRadioButton.addActionListener(actionEvent -> setAlphaMode(AlphaComposite.DST));
        srcAtopRadioButton.addActionListener(actionEvent -> setAlphaMode(AlphaComposite.SRC_ATOP));
        dstAtopRadioButton.addActionListener(actionEvent -> setAlphaMode(AlphaComposite.DST_ATOP));
        xorRadioButton.addActionListener(actionEvent -> setAlphaMode(AlphaComposite.XOR));
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        createUIComponents();
        panel1 = new JPanel();
        panel1.setLayout(new BorderLayout(0, 0));
        final JPanel panel2 = new JPanel();
        panel2.setLayout(new GridLayoutManager(13, 1, new Insets(10, 10, 10, 10), -1, -1));
        panel1.add(panel2, BorderLayout.EAST);
        clearRadioButton = new JRadioButton();
        clearRadioButton.setSelected(true);
        clearRadioButton.setText("clear");
        panel2.add(clearRadioButton, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final Spacer spacer1 = new Spacer();
        panel2.add(spacer1, new GridConstraints(12, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_VERTICAL, 1, GridConstraints.SIZEPOLICY_WANT_GROW, null, null, null, 0, false));
        srcOverRadioButton = new JRadioButton();
        srcOverRadioButton.setText("src over");
        panel2.add(srcOverRadioButton, new GridConstraints(1, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        dstOverRadioButton = new JRadioButton();
        dstOverRadioButton.setText("dst over");
        panel2.add(dstOverRadioButton, new GridConstraints(2, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        srcInRadioButton = new JRadioButton();
        srcInRadioButton.setText("src in");
        panel2.add(srcInRadioButton, new GridConstraints(3, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        dstInRadioButton = new JRadioButton();
        dstInRadioButton.setText("dst in");
        panel2.add(dstInRadioButton, new GridConstraints(4, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        srcOutRadioButton = new JRadioButton();
        srcOutRadioButton.setText("src out");
        panel2.add(srcOutRadioButton, new GridConstraints(5, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        dstOutRadioButton = new JRadioButton();
        dstOutRadioButton.setText("dst out");
        panel2.add(dstOutRadioButton, new GridConstraints(6, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        srcRadioButton = new JRadioButton();
        srcRadioButton.setText("src");
        panel2.add(srcRadioButton, new GridConstraints(7, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        dstRadioButton = new JRadioButton();
        dstRadioButton.setText("dst");
        panel2.add(dstRadioButton, new GridConstraints(8, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        srcAtopRadioButton = new JRadioButton();
        srcAtopRadioButton.setText("src atop");
        panel2.add(srcAtopRadioButton, new GridConstraints(9, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        dstAtopRadioButton = new JRadioButton();
        dstAtopRadioButton.setText("dst atop");
        panel2.add(dstAtopRadioButton, new GridConstraints(10, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        xorRadioButton = new JRadioButton();
        xorRadioButton.setText("xor");
        panel2.add(xorRadioButton, new GridConstraints(11, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        panel1.add(compositePanel, BorderLayout.CENTER);
        ButtonGroup buttonGroup;
        buttonGroup = new ButtonGroup();
        buttonGroup.add(clearRadioButton);
        buttonGroup.add(srcOverRadioButton);
        buttonGroup.add(dstOverRadioButton);
        buttonGroup.add(srcInRadioButton);
        buttonGroup.add(dstInRadioButton);
        buttonGroup.add(srcOutRadioButton);
        buttonGroup.add(dstOutRadioButton);
        buttonGroup.add(srcRadioButton);
        buttonGroup.add(dstRadioButton);
        buttonGroup.add(srcAtopRadioButton);
        buttonGroup.add(dstAtopRadioButton);
        buttonGroup.add(xorRadioButton);
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return panel1;
    }

    private void createUIComponents() {
        // TODO: place custom component creation code here
        compositePanel = new JPanel() {
            BufferedImage image;

            {
                setBackground(Color.white);
                URL url = getClass().getResource("/images/map.jpg");
                try {
                    image = ImageIO.read(url);
                } catch (IOException e) {
                    e.printStackTrace();
                }
            }

            @Override
            protected void paintComponent(Graphics g) {
                super.paintComponent(g);
                Graphics2D g2 = (Graphics2D) g;
                g2.setRenderingHint(RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);
                g2.drawImage(image, 100, 100, this);
                AlphaComposite ac = AlphaComposite.getInstance(alphaMode, 0.4f);
                g2.setComposite(ac);

                Shape ellipse = new Ellipse2D.Double(50, 50, 120, 120);
                g2.setColor(Color.red);
                g2.fill(ellipse);

                g2.setColor(Color.orange);
                g2.setFont(new Font("Serif", Font.BOLD, 144));
                g2.drawString("Java", 90, 240);
            }
        };
    }
}
